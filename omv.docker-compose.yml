

#Configure To YOUR Enviornment and RUN
# docker compose -f solo-docker-compose.yml up -d
networks:
  private_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
    attachable: true
    internal: false
    enable_ipv6: true
    ipam:
      config:
        - subnet: 10.2.0.0/24
        - subnet: 2001:db8:abc::/64
          gateway: 2001:db8:abc::1


services:

  cloudflare-ddns-laytext:
    image: oznu/cloudflare-ddns
    container_name: cloudflare-ddns-laytext
    restart: always
    environment:
      - API_KEY=f0634f6e784c48680dd887fc665579139f015
      - ZONE=j0k3rs.org
      - SUBDOMAIN=laytext
      - EMAIL=s.lee@noxcis.com
  
  cloudflare-ddns-si:
    image: oznu/cloudflare-ddns
    container_name: cloudflare-ddns-si
    restart: always
    environment:
      - API_KEY=f0634f6e784c48680dd887fc665579139f015
      - ZONE=j0k3rs.org
      - SUBDOMAIN=si
      - EMAIL=s.lee@noxcis.com

  
  adguard-home:
    restart: unless-stopped
    image: adguard/adguardhome
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 68:68/tcp
      - 68:68/udp
      - 784:784/udp
      - 853:853/tcp
      - 3000:3000/tcp
      - 8000:8000/tcp
      - 8443:443/tcp
    volumes:
      - /home/noxcis/Documents/Docker/Data/adguardhome/workdir:/opt/adguardhome/work
      - /home/noxcis/Documents/Docker/Data/adguardhome/confdir:/opt/adguardhome/conf
    networks:
        private_network:
          ipv4_address: 10.2.0.100
          ipv6_address: 2001:db8:abc::100
  
  redis:
    image: redis:7-alpine
    container_name: wiregate-redis
    hostname: redis
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    env_file:
      - ./WireGate.env
    volumes:
      - redis_data:/data
      - /home/noxcis/Documents/Docker/Data/configs/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      private_network:
        ipv4_address: 10.2.0.4
        ipv6_address: 2001:db8:abc::4
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "wiregate_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:15-alpine
    container_name: wiregate-postgres
    hostname: postgres
    restart: unless-stopped
    env_file:
      - ./WireGate.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /home/noxcis/Documents/Docker/Data/configs/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - /home/noxcis/Documents/Docker/Data/configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      private_network:
        ipv4_address: 10.2.0.5
        ipv6_address: 2001:db8:abc::5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wiregate_user -d wiregate"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf

  wiregate:
      image: noxcis/wiregate:sol-beta-v2.4.2
      container_name: wiregate
      hostname: wiregate
      cap_add:
        - NET_ADMIN
        - SYS_MODULE
      devices:
        - /dev/net/tun:/dev/net/tun  
      restart: unless-stopped
      depends_on:
        postgres:
          condition: service_healthy
        redis:
          condition: service_healthy
      volumes:
        - /lib/modules:/lib/modules:ro 
        - pf_conf:/WireGate/iptable-rules/
        - conf:/etc/wireguard 
        - /home/noxcis/Documents/Docker/Data/db:/WireGate/db
        - /home/noxcis/Documents/Docker/Data/configs/ssl:/WireGate/SSL_CERT
        - /home/noxcis/Documents/Docker/Data/configs/dnscrypt:/WireGate/dnscrypt
        - /home/noxcis/Documents/Docker/Data/configs/tor:/etc/tor/
        - /home/noxcis/Documents/Docker/Data/configs/logs:/WireGate/log/
        - /home/noxcis/Documents/Docker/Data/configs/master-key:/WireGate/master-key
      env_file:
        - ./WireGate.env
      ports:
        #- 44333:44333/udp
        #- "4430-4433:4430-4433/udp" #UDP Interface Listen Ports For Zones
        - 8080:80/tcp   # HTTP port
        - 8443:443/tcp  # HTTPS port for SSL
      sysctls:        #Otherwise access the dashboard @ your-sever-ip/domain:6060
        - net.ipv4.ip_forward=1
        - net.ipv4.conf.all.src_valid_mark=1
        - net.ipv6.conf.all.forwarding=1
        - net.ipv6.conf.default.forwarding=1
      healthcheck:
        test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--no-check-certificate", "https://localhost:443/api/validateAuthentication", "||", "exit", "1"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 30s
      networks:
        private_network:
          ipv4_address: 10.2.0.3
          ipv6_address: 2001:db8:abc::3



volumes:
    db:
    conf:
    pf_conf:
    redis_data:
    postgres_data:
  
  
