apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-loadbalancer
  namespace: wiregate
  labels:
    app: nginx-loadbalancer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-loadbalancer
  template:
    metadata:
      labels:
        app: nginx-loadbalancer
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-loadbalancer-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-loadbalancer
  namespace: wiregate
  labels:
    app: nginx-loadbalancer
spec:
  selector:
    app: nginx-loadbalancer
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-loadbalancer-config
  namespace: wiregate
data:
  nginx.conf: |
    upstream wiregate_backend {
        least_conn;
        server wiregate-cluster-0.wiregate-cluster-headless.wiregate.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
        server wiregate-cluster-1.wiregate-cluster-headless.wiregate.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
        server wiregate-cluster-2.wiregate-cluster-headless.wiregate.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name _;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Proxy to WireGate cluster
        location / {
            proxy_pass http://wiregate_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Handle WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # WireGuard UDP ports (pass-through)
        location /wireguard/ {
            proxy_pass http://wiregate_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
