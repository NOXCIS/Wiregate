

#Configure To YOUR Enviornment and RUN
# docker compose -f solo-docker-compose.yml up -d
networks:
  private_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
    attachable: true
    internal: false
    enable_ipv6: true
    ipam:
      config:
        - subnet: 10.2.0.0/24
        - subnet: 2001:db8:abc::/64
          gateway: 2001:db8:abc::1


services:

  redis:
    image: redis:7-alpine
    container_name: wiregate-redis
    hostname: redis
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    env_file:
      - ./.env
    volumes:
      - redis_data:/data
      - ./configs/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      private_network:
        ipv4_address: 10.2.0.4
        ipv6_address: 2001:db8:abc::4
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "wiregate_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:15-alpine
    container_name: wiregate-postgres
    hostname: postgres
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      private_network:
        ipv4_address: 10.2.0.5
        ipv6_address: 2001:db8:abc::5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wiregate_user -d wiregate"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf

  wiregate:
      build:
        context: .
        dockerfile: Dockerfile
      #image: noxcis/wiregate:sol-beta-v2.1.4
      container_name: wiregate
      hostname: wiregate
      cap_add:
        - NET_ADMIN
        - SYS_MODULE
      devices:
        - /dev/net/tun:/dev/net/tun  
      restart: unless-stopped
      depends_on:
        postgres:
          condition: service_healthy
        redis:
          condition: service_healthy
      volumes:
        - /lib/modules:/lib/modules:ro 
        - pf_conf:/WireGate/iptable-rules/
        - conf:/etc/wireguard 
        - db:/WireGate/db
        - ./configs/ssl:/WireGate/SSL_CERT
        - ./configs/dnscrypt:/WireGate/dnscrypt
        - ./configs/tor:/etc/tor/
        - ./configs/logs:/WireGate/log/
        - ./configs/master-key:/WireGate/master-key
      env_file:
        - ./.env
      ports:
        #- 44333:44333/udp
        #- "4430-4433:4430-4433/udp" #UDP Interface Listen Ports For Zones
        - 8080:80/tcp #Comment Out for full network lockdown, I.E only Accessible via VPN conttenction at http://wire.gate using config in generated master-key folder
      sysctls:        #Otherwise access the dashboard @ your-sever-ip/domain:6060
        - net.ipv4.ip_forward=1
        - net.ipv4.conf.all.src_valid_mark=1
        - net.ipv6.conf.all.forwarding=1
        - net.ipv6.conf.default.forwarding=1
      networks:
        private_network:
          ipv4_address: 10.2.0.3
          ipv6_address: 2001:db8:abc::3



volumes:
    db:
    conf:
    pf_conf:
    redis_data:
    postgres_data:
  
