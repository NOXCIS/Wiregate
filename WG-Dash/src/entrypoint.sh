#!/bin/bash

# Trap the SIGTERM signal and call the stop_service function
trap 'stop_service' SIGTERM

echo "Starting the WireGuard Dashboard Docker container."

stop_service() {
  echo "SIGTERM received. Stopping WireGuard Dashboard and Tor."
  ./wgd.sh stop
  kill $TOR_PID
  exit 0
}

clean_up() {
  echo "Looking for remains of previous instances..."
  if [ -f "/opt/wireguarddashboard/app/src/gunicorn.pid" ]; then
    echo "Found old .pid file, removing."
    rm /opt/wireguarddashboard/app/src/gunicorn.pid
  else
    echo "No remains found, continuing."
  fi
}

ensure_blocking() {
  sleep 1s
  echo "Ensuring container continuation."

  # Check if any error or access logs exist and tail them
  err_log=$(find /opt/wireguarddashboard/src/log -name "error_*.log" | head -n 1)
  acc_log=$(find /opt/wireguarddashboard/src/log -name "access_*.log" | head -n 1)

  if [ -n "$err_log" ] || [ -n "$acc_log" ]; then
    tail -f $err_log $acc_log &
  fi

  wait
}
run_tor_random() {
    # Run immediately the first time
    echo "Starting Tor ..."
    tor >> ./log/tor_startup_log.txt &
    TOR_PID=$!

    while true; do
        # Generate a random number between 900 and 2700 seconds (15 to 45 minutes)
        sleep_time=$(( RANDOM % (2700 - 900 + 1) + 900 ))

        echo "New Circuit in $sleep_time seconds..."
        sleep $sleep_time

        echo "Restarting Tor..."
        pkill tor
        tor >> ./log/tor_startup_log.txt &
        TOR_PID=$!
    done
}

{ date; clean_up; printf "\n\n"; } >> ./log/install.txt

chmod u+x /opt/wireguarddashboard/src/wgd.sh
/opt/wireguarddashboard/src/wgd.sh install
/opt/wireguarddashboard/src/wgd.sh docker_start &

# Start Tor and capture its PID


run_tor_random &

#tor >> ./log/tor_startup_log.txt &
#TOR_PID=$!

# Update DNS settings
tee /etc/resolv.conf &> /dev/null << EOF
Generated by WireGate; DO NOT EDIT
nameserver 10.2.0.100
option allow-domains *.onion
search .
EOF

# Ensure container remains running
ensure_blocking